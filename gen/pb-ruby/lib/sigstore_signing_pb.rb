# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sigstore_signing.proto

require 'google/protobuf'

require 'sigstore_trustroot_pb'
require 'sigstore_common_pb'
require 'sigstore_bundle_pb'
require 'sigstore_verification_pb'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("sigstore_signing.proto", :syntax => :proto3) do
    add_message "dev.sigstore.signing.v1.FulcioSigningMaterial" do
      optional :identity_token, :string, 1
      proto3_optional :key_details, :enum, 2, "dev.sigstore.common.v1.PublicKeyDetails"
    end
    add_message "dev.sigstore.signing.v1.SigningOptions" do
      oneof :signing_materials do
        optional :fulcio_signing_material, :message, 1, "dev.sigstore.signing.v1.FulcioSigningMaterial"
      end
    end
    add_message "dev.sigstore.signing.v1.BundleContentOptions" do
      oneof :content do
        optional :message_signature, :message, 1, "dev.sigstore.signing.v1.BundleContentOptions.MessageSignature"
        optional :dsse_envelope, :message, 2, "dev.sigstore.signing.v1.BundleContentOptions.DSSE"
      end
    end
    add_message "dev.sigstore.signing.v1.BundleContentOptions.MessageSignature" do
      optional :hash_algorithm, :enum, 1, "dev.sigstore.common.v1.HashAlgorithm"
    end
    add_message "dev.sigstore.signing.v1.BundleContentOptions.DSSE" do
      optional :payload, :bytes, 1
      optional :payloadType, :string, 2
    end
    add_message "dev.sigstore.signing.v1.TSAOptions" do
    end
    add_message "dev.sigstore.signing.v1.SigningInput" do
      optional :trusted_root, :message, 1, "dev.sigstore.trustroot.v1.TrustedRoot"
      optional :signing_options, :message, 2, "dev.sigstore.signing.v1.SigningOptions"
      optional :bundle_content_options, :message, 3, "dev.sigstore.signing.v1.BundleContentOptions"
      optional :tsa_options, :message, 4, "dev.sigstore.signing.v1.TSAOptions"
      proto3_optional :artifact, :message, 5, "dev.sigstore.verification.v1.Artifact"
    end
    add_message "dev.sigstore.signing.v1.SigningResult" do
      oneof :output do
        optional :bundle, :message, 1, "dev.sigstore.bundle.v1.Bundle"
        optional :error, :message, 2, "dev.sigstore.signing.v1.SigningResult.Error"
      end
    end
    add_message "dev.sigstore.signing.v1.SigningResult.Error" do
      optional :message, :string, 1
    end
  end
end

module Sigstore
  module Signing
    module V1
      FulcioSigningMaterial = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dev.sigstore.signing.v1.FulcioSigningMaterial").msgclass
      SigningOptions = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dev.sigstore.signing.v1.SigningOptions").msgclass
      BundleContentOptions = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dev.sigstore.signing.v1.BundleContentOptions").msgclass
      BundleContentOptions::MessageSignature = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dev.sigstore.signing.v1.BundleContentOptions.MessageSignature").msgclass
      BundleContentOptions::DSSE = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dev.sigstore.signing.v1.BundleContentOptions.DSSE").msgclass
      TSAOptions = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dev.sigstore.signing.v1.TSAOptions").msgclass
      SigningInput = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dev.sigstore.signing.v1.SigningInput").msgclass
      SigningResult = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dev.sigstore.signing.v1.SigningResult").msgclass
      SigningResult::Error = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dev.sigstore.signing.v1.SigningResult.Error").msgclass
    end
  end
end
