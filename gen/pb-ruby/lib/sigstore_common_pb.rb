# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sigstore_common.proto

require 'google/protobuf'

require 'google/api/field_behavior_pb'
require 'google/protobuf/timestamp_pb'


descriptor_data = "\n\x15sigstore_common.proto\x12\x16\x64\x65v.sigstore.common.v1\x1a\x1fgoogle/api/field_behavior.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"V\n\nHashOutput\x12\x38\n\talgorithm\x18\x01 \x01(\x0e\x32%.dev.sigstore.common.v1.HashAlgorithm\x12\x0e\n\x06\x64igest\x18\x02 \x01(\x0c\"f\n\x10MessageSignature\x12:\n\x0emessage_digest\x18\x01 \x01(\x0b\x32\".dev.sigstore.common.v1.HashOutput\x12\x16\n\tsignature\x18\x02 \x01(\x0c\x42\x03\xe0\x41\x02\"\x1c\n\x05LogId\x12\x13\n\x06key_id\x18\x01 \x01(\x0c\x42\x03\xe0\x41\x02\"7\n\x16RFC3161SignedTimestamp\x12\x1d\n\x10signed_timestamp\x18\x01 \x01(\x0c\x42\x03\xe0\x41\x02\"\xb9\x01\n\tPublicKey\x12\x16\n\traw_bytes\x18\x01 \x01(\x0cH\x00\x88\x01\x01\x12=\n\x0bkey_details\x18\x02 \x01(\x0e\x32(.dev.sigstore.common.v1.PublicKeyDetails\x12\x39\n\tvalid_for\x18\x03 \x01(\x0b\x32!.dev.sigstore.common.v1.TimeRangeH\x01\x88\x01\x01\x42\x0c\n\n_raw_bytesB\x0c\n\n_valid_for\"#\n\x13PublicKeyIdentifier\x12\x0c\n\x04hint\x18\x01 \x01(\t\"#\n\x10ObjectIdentifier\x12\x0f\n\x02id\x18\x01 \x03(\x05\x42\x03\xe0\x41\x02\"a\n\x19ObjectIdentifierValuePair\x12\x35\n\x03oid\x18\x01 \x01(\x0b\x32(.dev.sigstore.common.v1.ObjectIdentifier\x12\r\n\x05value\x18\x02 \x01(\x0c\">\n\x11\x44istinguishedName\x12\x14\n\x0corganization\x18\x01 \x01(\t\x12\x13\n\x0b\x63ommon_name\x18\x02 \x01(\t\")\n\x0fX509Certificate\x12\x16\n\traw_bytes\x18\x01 \x01(\x0c\x42\x03\xe0\x41\x02\"\x89\x01\n\x16SubjectAlternativeName\x12@\n\x04type\x18\x01 \x01(\x0e\x32\x32.dev.sigstore.common.v1.SubjectAlternativeNameType\x12\x10\n\x06regexp\x18\x02 \x01(\tH\x00\x12\x0f\n\x05value\x18\x03 \x01(\tH\x00\x42\n\n\x08identity\"U\n\x14X509CertificateChain\x12=\n\x0c\x63\x65rtificates\x18\x01 \x03(\x0b\x32\'.dev.sigstore.common.v1.X509Certificate\"l\n\tTimeRange\x12)\n\x05start\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12,\n\x03\x65nd\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.TimestampH\x00\x88\x01\x01\x42\x06\n\x04_end*u\n\rHashAlgorithm\x12\x1e\n\x1aHASH_ALGORITHM_UNSPECIFIED\x10\x00\x12\x0c\n\x08SHA2_256\x10\x01\x12\x0c\n\x08SHA2_384\x10\x02\x12\x0c\n\x08SHA2_512\x10\x03\x12\x0c\n\x08SHA3_256\x10\x04\x12\x0c\n\x08SHA3_384\x10\x05*\xf1\x04\n\x10PublicKeyDetails\x12\"\n\x1ePUBLIC_KEY_DETAILS_UNSPECIFIED\x10\x00\x12\x19\n\x11PKCS1_RSA_PKCS1V5\x10\x01\x1a\x02\x08\x01\x12\x15\n\rPKCS1_RSA_PSS\x10\x02\x1a\x02\x08\x01\x12\x18\n\x10PKIX_RSA_PKCS1V5\x10\x03\x1a\x02\x08\x01\x12\x14\n\x0cPKIX_RSA_PSS\x10\x04\x1a\x02\x08\x01\x12!\n\x1dPKIX_RSA_PKCS1V15_2048_SHA256\x10\t\x12!\n\x1dPKIX_RSA_PKCS1V15_3072_SHA256\x10\n\x12!\n\x1dPKIX_RSA_PKCS1V15_4096_SHA256\x10\x0b\x12\x1c\n\x18PKIX_RSA_PSS_2048_SHA256\x10\x10\x12\x1c\n\x18PKIX_RSA_PSS_3072_SHA256\x10\x11\x12\x1c\n\x18PKIX_RSA_PSS_4096_SHA256\x10\x12\x12$\n\x1cPKIX_ECDSA_P256_HMAC_SHA_256\x10\x06\x1a\x02\x08\x01\x12\x1b\n\x17PKIX_ECDSA_P256_SHA_256\x10\x05\x12\x1b\n\x17PKIX_ECDSA_P384_SHA_384\x10\x0c\x12\x1b\n\x17PKIX_ECDSA_P521_SHA_512\x10\r\x12\x10\n\x0cPKIX_ED25519\x10\x07\x12\x13\n\x0fPKIX_ED25519_PH\x10\x08\x12\x1f\n\x17PKIX_ECDSA_P384_SHA_256\x10\x13\x1a\x02\x08\x01\x12\x1f\n\x17PKIX_ECDSA_P521_SHA_256\x10\x14\x1a\x02\x08\x01\x12\x12\n\nLMS_SHA256\x10\x0e\x1a\x02\x08\x01\x12\x14\n\x0cLMOTS_SHA256\x10\x0f\x1a\x02\x08\x01\"\x04\x08\x15\x10\x32*o\n\x1aSubjectAlternativeNameType\x12-\n)SUBJECT_ALTERNATIVE_NAME_TYPE_UNSPECIFIED\x10\x00\x12\t\n\x05\x45MAIL\x10\x01\x12\x07\n\x03URI\x10\x02\x12\x0e\n\nOTHER_NAME\x10\x03\x42|\n\x1c\x64\x65v.sigstore.proto.common.v1B\x0b\x43ommonProtoP\x01Z6github.com/sigstore/protobuf-specs/gen/pb-go/common/v1\xea\x02\x14Sigstore::Common::V1b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool
pool.add_serialized_file(descriptor_data)

module Sigstore
  module Common
    module V1
      HashOutput = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dev.sigstore.common.v1.HashOutput").msgclass
      MessageSignature = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dev.sigstore.common.v1.MessageSignature").msgclass
      LogId = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dev.sigstore.common.v1.LogId").msgclass
      RFC3161SignedTimestamp = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dev.sigstore.common.v1.RFC3161SignedTimestamp").msgclass
      PublicKey = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dev.sigstore.common.v1.PublicKey").msgclass
      PublicKeyIdentifier = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dev.sigstore.common.v1.PublicKeyIdentifier").msgclass
      ObjectIdentifier = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dev.sigstore.common.v1.ObjectIdentifier").msgclass
      ObjectIdentifierValuePair = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dev.sigstore.common.v1.ObjectIdentifierValuePair").msgclass
      DistinguishedName = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dev.sigstore.common.v1.DistinguishedName").msgclass
      X509Certificate = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dev.sigstore.common.v1.X509Certificate").msgclass
      SubjectAlternativeName = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dev.sigstore.common.v1.SubjectAlternativeName").msgclass
      X509CertificateChain = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dev.sigstore.common.v1.X509CertificateChain").msgclass
      TimeRange = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dev.sigstore.common.v1.TimeRange").msgclass
      HashAlgorithm = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dev.sigstore.common.v1.HashAlgorithm").enummodule
      PublicKeyDetails = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dev.sigstore.common.v1.PublicKeyDetails").enummodule
      SubjectAlternativeNameType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dev.sigstore.common.v1.SubjectAlternativeNameType").enummodule
    end
  end
end
