{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "$ref": "#/definitions/CertificateAuthority",
    "definitions": {
        "CertificateAuthority": {
            "properties": {
                "subject": {
                    "$ref": "#/definitions/dev.sigstore.common.v1.DistinguishedName",
                    "additionalProperties": false,
                    "description": "The root certificate MUST be self-signed, and so the subject and issuer are the same."
                },
                "uri": {
                    "type": "string",
                    "description": "The URI at which the CA can be accessed."
                },
                "certChain": {
                    "$ref": "#/definitions/dev.sigstore.common.v1.X509CertificateChain",
                    "additionalProperties": false,
                    "description": "The certificate chain for this CA."
                },
                "validFor": {
                    "$ref": "#/definitions/dev.sigstore.common.v1.TimeRange",
                    "additionalProperties": false,
                    "description": "The time the *entire* chain was valid. This is at max the longest interval when *all* certificates in the chain were valid, but it MAY be shorter. Clients MUST check timestamps against *both* the `valid_for` time range *and* the entire certificate chain. The TimeRange should be considered valid *inclusive* of the endpoints."
                }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "Certificate Authority",
            "description": "CertificateAuthority enlists the information required to identify which CA to use and perform signature verification."
        },
        "dev.sigstore.common.v1.DistinguishedName": {
            "properties": {
                "organization": {
                    "type": "string"
                },
                "commonName": {
                    "type": "string"
                }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "Distinguished Name"
        },
        "dev.sigstore.common.v1.TimeRange": {
            "properties": {
                "start": {
                    "type": "string",
                    "format": "date-time"
                },
                "end": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "additionalProperties": false,
            "type": "object",
            "oneOf": [
                {
                    "required": [
                        "end"
                    ]
                }
            ],
            "title": "Time Range",
            "description": "The time range is closed and includes both the start and end times, (i.e., [start, end]). End is optional to be able to capture a period that has started but has no known end."
        },
        "dev.sigstore.common.v1.X509Certificate": {
            "properties": {
                "rawBytes": {
                    "type": "string",
                    "description": "DER-encoded X.509 certificate.",
                    "format": "binary",
                    "binaryEncoding": "base64"
                }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "X 509 Certificate"
        },
        "dev.sigstore.common.v1.X509CertificateChain": {
            "properties": {
                "certificates": {
                    "items": {
                        "$ref": "#/definitions/dev.sigstore.common.v1.X509Certificate"
                    },
                    "additionalProperties": false,
                    "type": "array",
                    "description": "The chain of certificates, with indices 0 to n. The first certificate in the array must be the leaf certificate used for signing. Signers MUST NOT include their root CA certificates in their embedded certificate chains, and SHOULD NOT include intermediate CA certificates that appear in independent roots of trust. Verifiers MUST validate the chain carefully to ensure that it chains up to a root CA certificate that they trust, regardless of whether the chain includes additional intermediate/root CA certificates. Verifiers MAY enforce additional constraints, such as requiring that all intermediate CA certificates appear in an independent root of trust. Verifiers SHOULD handle old or non-complying bundles that have additional intermediate/root CA certificates."
                }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "X 509 Certificate Chain",
            "description": "A chain of X.509 certificates."
        }
    }
}