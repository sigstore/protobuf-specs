# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: sigstore_rekor_events.proto
# plugin: python-betterproto
from dataclasses import dataclass
from datetime import datetime
from typing import List

import betterproto


@dataclass(eq=False, repr=False)
class NewEntry(betterproto.Message):
    """
    NewEntry defines the CloudEvents (https://cloudevents.io/) message that is
    published when a new entry is added to Rekor. Adheres to the v1.0.2 schema
    defined in https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents/form
    ats/cloudevents.json.
    """

    spec_version: str = betterproto.string_field(1)
    """The CloudEvents specification version."""

    id: str = betterproto.string_field(2)
    """The unique id of the entry in the log."""

    data: str = betterproto.string_field(3)
    """The JSON-encoded dev.sigstore.rekor.v1.TransparencyLogEntry message."""

    data_type: str = betterproto.string_field(4)
    """The type of the encoded data. Must be "application/json"."""

    type: str = betterproto.string_field(5)
    """
    The type of the message. Must be "dev.sigstore.rekor.events.v1.NewEntry".
    """

    source: str = betterproto.string_field(6)
    """The source of the event."""

    entry_kind: str = betterproto.string_field(7)
    """
    The kind (aka type) of the entry. Must match the value in the
    dev.sigstore.rekor.v1.TransparencyLogEntry.KindVersion.kind field.
    """

    subjects: List[str] = betterproto.string_field(8)
    """
    The subject identifiers for the entities that signed the artifact uploaded
    to Rekor. This field may not be set if the entry_kind is not a format that
    supports this type of metadata.
    """

    time: datetime = betterproto.message_field(9)
    """
    The timestamp that the entry was added to the log. Should match the value
    in dev.sigstore.rekor.v1.TransparencyLogEntry.integrated_time.
    """
